name: macOS CI Fix

on:
  workflow_dispatch:
  push:
    branches: [fix-macos-ci]
  pull_request:
    types: [opened, synchronize]
    paths:
      - '.github/workflows/**'

jobs:
  test-macos-minimal:
    name: macOS Minimal Test
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: System Info
        run: |
          echo "=== System Information ==="
          sw_vers
          echo "=== Available Commands ==="
          which docker || echo "Docker not found"
          which brew || echo "Homebrew not found"
          echo "=== Environment Variables ==="
          env | grep -E "(GITHUB|RUNNER)" | sort

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            ~/.mix
            ~/.hex
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}-v2
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install System Dependencies
        run: |
          # Update Homebrew
          brew update || true
          
          # Install required dependencies
          brew install erlang elixir postgresql@14 openssl@1.1 || true
          
          # Set environment variables for OpenSSL
          echo "LDFLAGS=-L$(brew --prefix openssl@1.1)/lib" >> $GITHUB_ENV
          echo "CFLAGS=-I$(brew --prefix openssl@1.1)/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$(brew --prefix openssl@1.1)/lib/pkgconfig" >> $GITHUB_ENV

      - name: Setup PostgreSQL
        run: |
          # Stop any existing PostgreSQL service
          brew services stop postgresql@14 || true
          brew services stop postgresql || true
          
          # Start PostgreSQL
          brew services start postgresql@14
          
          # Wait for PostgreSQL to start
          sleep 5
          
          # Create user and database
          createuser -s postgres || echo "User postgres may already exist"
          createdb raxol_test -O postgres || echo "Database may already exist"
          
          # Set password
          psql -U postgres -d postgres -c "ALTER USER postgres PASSWORD 'postgres';" || true
          
          # Verify connection
          psql -U postgres -d raxol_test -c "SELECT version();" || echo "Connection test failed"

      - name: Setup Elixir Project
        run: |
          # Install hex and rebar
          mix local.hex --force
          mix local.rebar --force
          
          # Get and compile dependencies
          mix deps.get
          mix deps.compile

      - name: Run Tests (Minimal)
        run: |
          # Run a subset of tests to verify basic functionality
          mix test test/raxol/minimal_test.exs || true
          mix test test/raxol/benchmarks/performance/memory_usage_test.exs || true
        env:
          MIX_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: raxol_test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/raxol_test
          SKIP_DOCKER_TESTS: true
          SKIP_TERMBOX2_TESTS: true
          CI: true

      - name: Check Compilation
        run: |
          mix compile --warnings-as-errors || echo "Compilation warnings detected"
        env:
          MIX_ENV: test

      - name: Summary
        if: always()
        run: |
          echo "=== Test Summary ==="
          echo "macOS CI workflow completed"
          echo "Docker Available: ${DOCKER_AVAILABLE:-false}"
          echo "PostgreSQL Status:"
          pg_isready -h localhost || echo "PostgreSQL not responding"