name: Release

env:
  ELIXIR_VERSION: "1.17.3"
  OTP_VERSION: "27.0"

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Cache Mix dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            deps
            _build
            ~/.hex
            ~/.mix
            priv/plts
          key: deps-${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-
            deps-${{ runner.os }}-

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}

      - name: Install Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix deps.compile

      - name: Run Tests
        env:
          MIX_ENV: test
        run: |
          mix test --cover
          mix credo
          mix dialyzer

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: runner.os == 'Linux'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cover/excoveralls.json
          flags: release
          name: codecov-release
          fail_ci_if_error: false

      # Alternative for non-Linux platforms
      - name: Process coverage data (non-Linux)
        if: runner.os != 'Linux'
        run: |
          echo "Coverage data available, but skipping codecov upload on non-Linux platforms."

      - name: Create Release
        env:
          MIX_ENV: prod
        run: |
          mix release

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            _build/prod/rel/raxol/releases/*/raxol.tar.gz
            _build/prod/rel/raxol/releases/*/raxol.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Hex
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: |
          mix hex.publish
