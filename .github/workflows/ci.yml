name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Elixir 1.14 with compatible OTP versions
          - os: ubuntu-latest
            elixir: "1.14"
            otp: "25.0"
          - os: macos-latest
            elixir: "1.14"
            otp: "25.0"

          # Elixir 1.15 with compatible OTP versions
          - os: ubuntu-latest
            elixir: "1.15"
            otp: "25.0"
          - os: ubuntu-latest
            elixir: "1.15"
            otp: "26.0"
          - os: macos-latest
            elixir: "1.15"
            otp: "26.0"

          # Elixir 1.16 with compatible OTP versions
          - os: ubuntu-latest
            elixir: "1.16"
            otp: "26.0"
          - os: macos-latest
            elixir: "1.16"
            otp: "26.0"

    services:
      # Note: Service containers only work on Linux runners
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: raxol_test
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Cache Mix dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: |
          # Update package lists
          sudo apt-get update

          # Install build dependencies
          sudo apt-get install -y build-essential autoconf m4 libncurses5-dev \
            libssl-dev libwxgtk3.2-dev libgl1-mesa-dev libglu1-mesa-dev \
            libpng-dev openssl
        if: runner.os == 'Linux'

      - name: Set up Erlang and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Mix Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix deps.compile

      - name: Install npm dependencies
        run: npm install

      - name: Run Tests
        run: |
          # Wait for PostgreSQL to be ready - only on Linux
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            for i in {1..30}; do
              if pg_isready -h localhost -p 5433; then
                break
              fi
              echo "Waiting for PostgreSQL to be ready... ($i/30)"
              sleep 1
            done
          else
            echo "Skipping PostgreSQL wait on macOS as service containers are not supported"
          fi

          # Run tests with coverage and performance monitoring
          mix test --cover --slowest 10
        env:
          MIX_ENV: test
          POSTGRES_HOST: ${{ runner.os == 'Linux' && 'localhost' || '127.0.0.1' }}
          POSTGRES_PORT: 5433
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: raxol_test
          TERM: xterm-256color
          PLATFORM: ${{ runner.os }}

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cover/excoveralls.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      # Run security scan only for Linux runners (using container action)
      - name: Run Security Scan on Linux
        uses: snyk/actions/node@master
        if: runner.os == 'Linux'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      # For macOS, use Snyk CLI setup action instead of Docker-based action
      - name: Setup Snyk CLI on macOS
        uses: snyk/actions/setup@master
        if: runner.os == 'macOS'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Run simplified Snyk scan on macOS
      - name: Run Security Scan on macOS
        if: runner.os == 'macOS'
        run: snyk test --severity-threshold=high || echo "Snyk found issues but continuing"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Verify Terminal Compatibility
        run: |
          mix run scripts/verify_terminal_compatibility.exs
        env:
          TERM: xterm-256color

      - name: Run Platform-Specific Tests
        run: |
          echo "Running platform-specific tests for $PLATFORM"
          mix test test/platform_specific
        env:
          PLATFORM: ${{ runner.os }}

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Mix dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev openssl

      - name: Set up Erlang and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "25.0"
          elixir-version: "1.14"

      - name: Install Mix Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Check Formatting
        run: mix format --check-formatted

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Mix dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev openssl

      - name: Set up Erlang and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "25.0"
          elixir-version: "1.14"

      - name: Install Mix Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Generate Docs
        run: mix docs
