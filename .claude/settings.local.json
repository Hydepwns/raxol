{
  "permissions": {
    "allow": [
      "Bash(node scripts/docs/check_links.js:*)",
      "Bash(for file in \"docs/examples/guides/01_getting_started/quick_start.md\" \"docs/examples/guides/02_core_concepts/terminal_emulator.md\" \"docs/examples/snippets/README.md\" \"vscode-raxol/README.md\" \"docs/examples/guides/03_components_and_layout/components/README.md\")",
      "Bash(do)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(echo \"✅ $file exists\")",
      "Bash(else)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(timeout 30 mix docs)",
      "Bash(gh api:*)",
      "Bash(gh run download:*)",
      "Bash(timeout 60 mix test test/raxol/audit --max-failures 10)",
      "Bash(timeout 60 mix test test/raxol/audit/events_test.exs --max-failures 10)",
      "Bash(timeout 60 mix test test/raxol/audit/storage_test.exs --max-failures 5)",
      "Bash(timeout 60 mix test test/raxol/audit/events_test.exs)",
      "Bash(timeout 120 mix test --exclude integration --exclude slow --exclude performance --max-failures 3)",
      "Bash(timeout 60 mix test test/raxol/audit/storage_test.exs --max-failures 10)",
      "Bash(timeout 60 mix test test/raxol/audit --max-failures 5)",
      "Bash(timeout 60 mix test test/raxol/audit/analyzer_test.exs:51 --max-failures 1)",
      "Bash(timeout 60 mix test test/raxol/audit/analyzer_test.exs --max-failures 10)",
      "Bash(timeout 60 mix test test/raxol/audit --max-failures 3)",
      "Bash(timeout 90 mix test test/raxol/audit --max-failures 2)",
      "Bash(timeout 60 mix test --exclude integration --exclude slow --exclude performance --max-failures 3 --formatter ExUnit.CLIFormatter)",
      "Bash(timeout 60 mix test test/raxol/audit/events_test.exs --max-failures 3)",
      "Bash(timeout 60 mix test --failed)",
      "Bash(timeout 60 mix test test/raxol/tutorials/runner_test.exs --max-failures 5)",
      "Bash(timeout 60 mix test test/raxol/tutorials/runner_test.exs --max-failures 3)",
      "Bash(timeout 120 mix test --max-failures 1)",
      "Bash(timeout 60 mix test --max-failures 5 --seed 0)",
      "Bash(timeout 120 mix test --max-failures 3 --seed 0)",
      "Bash(timeout:*)",
      "Bash(npm install)",
      "Bash(npm run compile:*)",
      "Bash(npm install:*)",
      "Bash(vsce package:*)",
      "Bash(npm uninstall:*)",
      "Bash(node:*)",
      "Bash(time MIX_ENV=test mix run -e \"IO.puts(''Startup complete'')\")",
      "Bash(MIX_ENV=test mix compile --force)",
      "Bash(/dev/null)",
      "Bash(time MIX_ENV=test mix run -e \"IO.puts(''Runtime startup complete'')\")",
      "Bash(for link in \"docs/benchmarks\" \"docs/tutorials\" \"docs/quickstart.md\" \"docs/playground\" \"docs/components\" \"docs/ARCHITECTURE.md\" \"CONTRIBUTING.md\" \"docs/performance\" \"docs/security\" \"docs/plugins\" \"docs/enterprise\" \"LICENSE.md\")",
      "Bash(if [ -e \"$link\" ])",
      "Bash(for link in \"docs/bench\" \"docs/tutorials\" \"docs/examples\" \"docs/components\" \"docs/ARCHITECTURE.md\" \"CONTRIBUTING.md\" \"docs/adr\" \"docs/CONSOLIDATED_README.md\" \"docs/WEB_INTERFACE_GUIDE.md\" \"LICENSE.md\")",
      "Bash(snyk auth)",
      "Bash(snyk test:*)",
      "Bash(mix hex.info:*)",
      "Bash(mix archive.install:*)",
      "Bash(mix sobelow:*)",
      "Bash(git checkout:*)",
      "Bash(mix hex.publish:*)",
      "Bash(mix hex.user:*)",
      "Bash(mkdir:*)",
      "Bash(mix test:*)",
      "Bash(mix compile:*)",
      "Bash(for dir in \"docs/bench\" \"docs/tutorials\" \"docs/examples\" \"docs/components\" \"docs/ARCHITECTURE.md\" \"CONTRIBUTING.md\" \"docs/adr\" \"docs/CONSOLIDATED_README.md\" \"docs/WEB_INTERFACE_GUIDE.md\" \"LICENSE.md\")",
      "Bash(if [ -e \"$dir\" ])",
      "Bash(mix clean:*)",
      "Bash(snyk auth:*)",
      "Bash(make:*)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(mix hex.audit:*)",
      "Bash(for file in \"docs/tutorials\" \"docs/examples\" \"docs/components\" \"docs/ARCHITECTURE.md\" \"CONTRIBUTING.md\" \"docs/bench\" \"docs/adr\" \"docs/CONSOLIDATED_README.md\" \"docs/WEB_INTERFACE_GUIDE.md\" \"LICENSE.md\")",
      "Bash(do if [ -e \"$file\" ])",
      "Bash(then echo \"✅ $file exists\")",
      "Bash(else echo \"❌ $file missing\")",
      "Bash(git add:*)",
      "Bash(git submodule:*)",
      "Bash(mix deps.get:*)",
      "Bash(mix deps.unlock:*)",
      "Bash(rm:*)",
      "Bash(mix format:*)",
      "Bash(mix credo:*)",
      "Bash(find:*)",
      "Bash(MIX_ENV=test mix compile --force --warnings-as-errors)",
      "Bash(mix deps.unused:*)",
      "Bash(MIX_ENV=test mix compile --warnings-as-errors)",
      "Bash(pkill:*)",
      "Bash(elixir:*)",
      "Bash(sed:*)",
      "Bash(chmod:*)",
      "Bash(rg:*)",
      "Bash(SKIP_TERMBOX2_TESTS=true mix deps.compile)",
      "Bash(export TMPDIR=/tmp)",
      "Bash(MIX_ENV=test mix compile)",
      "Bash(mix deps.compile:*)",
      "Bash(for file in lib/raxol/ui/components/input/select_list/navigation.ex lib/raxol/ui/components/input/multi_line_input/render_helper.ex lib/raxol/ui/components/dashboard/grid_container.ex)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(for file in lib/raxol/ui/accessibility/high_contrast.ex lib/raxol/terminal/config_manager.ex lib/raxol/terminal/driver.ex)",
      "Bash(git commit:*)",
      "Bash(mix help:*)",
      "Bash(mix benchmark:*)",
      "Bash(git log:*)",
      "Bash(git reset:*)",
      "Bash(mix run:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}